name: Delete Application and Upstream Manifest

permissions:
  contents: write  # Provide write access to repository contents

on:
  workflow_dispatch:
    inputs:
      service_name:
        description: 'Service name to delete'
        required: true
        default: 'sample-service-1-team-a'
        type: string
      upstream_name:
        description: 'Upstream name to delete (optional)'
        required: false
        type: string

jobs:
  delete-manifest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: Create an empty branch
        id: create_branch
        run: |
          BRANCH_NAME="delete-manifest-${{ github.run_id }}-${{ github.event.inputs.service_name }}"
          git checkout --orphan $BRANCH_NAME
          git rm -rf .
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Delete the service manifest file
        run: |
          FILE_PATH="routes/${{ github.event.inputs.service_name }}.yaml"
          if [ -f "$FILE_PATH" ]; then
            git rm $FILE_PATH
          else
            echo "File $FILE_PATH does not exist, skipping deletion."
          fi

      - name: Delete the upstream manifest file (if provided)
        if: ${{ github.event.inputs.upstream_name != '' }}
        run: |
          UPSTREAM_FILE_PATH="routes/upstreams/${{ github.event.inputs.upstream_name }}.yaml"
          if [ -f "$UPSTREAM_FILE_PATH" ]; then
            git rm $UPSTREAM_FILE_PATH
          else
            echo "Upstream file $UPSTREAM_FILE_PATH does not exist, skipping deletion."
          fi

      - name: Commit and push changes
        run: |
          git commit -m "Delete manifest for service ${{ github.event.inputs.service_name }} and upstream ${{ github.event.inputs.upstream_name }}"
          git push origin ${{ env.BRANCH_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge branch into main
        run: |
          git fetch origin main
          git checkout main
          git pull origin main
          git merge --allow-unrelated-histories --no-ff ${{ env.BRANCH_NAME }}
          git push origin main || (git pull --rebase origin main && git push origin main)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete branch after merge
        run: |
          git push origin --delete ${{ env.BRANCH_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
