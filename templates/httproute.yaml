{{- $baseName := randAlphaNum 4 | lower }}
{{- $generatedName := printf "gloo-%s" $baseName }}
{{- $name := .Values.metadata.name | default $generatedName }}
{{- $namespace := .Values.metadata.namespace | default "gloo-system" }}
{{- $hostnames := .Values.spec.hostnames | default (list (printf "%s.glootest.com" $name)) }}
{{- $prefixPath := index .Values.metadata.labels "prefixPath" | default $name }}
{{- $routeOptionName := printf "%s-route-policies" $name }}  # Default RouteOption name
{{- $jwtDisabled := .Values.spec.routeOption.jwt.disable | default false }}  # Configurable JWT disable value
{{- $hostRewrite := .Values.spec.routeOption.hostRewrite }}  # Configurable hostRewrite value (no default)
{{- $extAuthName := .Values.spec.routeOption.extauth.configRef.name | default "" }}  # No default for extauth configRef name
{{- $extAuthNamespace := .Values.spec.routeOption.extauth.configRef.namespace | default "" }}  # No default for extauth configRef namespace
---
# HTTPRoute resource
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: {{ $name }}-route
  namespace: {{ $namespace }}
  labels:
    example: {{ .Values.metadata.labels.example | default $name }}
    gateway: {{ .Values.metadata.labels.gateway | default "https" }}
spec:
  hostnames:
{{- range $hostnames }}
    - {{ . }}
{{- end }}
  parentRefs:
    - name: "https"
      namespace: "gloo-system"
  rules:
{{- range .Values.spec.rules }}
    - backendRefs:
        - group: gloo.solo.io
          kind: Upstream
          name: {{ .backendRefName | default $name }}  # Default to name if not provided
      matches:
        - path:
            type: PathPrefix
            value: {{ .pathPrefix | default "/" }}  # Default to root path if not provided
      filters:
        - type: ExtensionRef
          extensionRef:
            group: gateway.solo.io
            kind: RouteOption
            name: {{ .routeOptionName | default $routeOptionName }}  # Default RouteOption name
{{- end }}
---
# RouteOption resource
apiVersion: gateway.solo.io/v1
kind: RouteOption
metadata:
  name: {{ $routeOptionName }}
  namespace: {{ $namespace }}
spec:
  options:
    jwt:
      disable: {{ $jwtDisabled }}  # Configurable true/false
{{- if $hostRewrite }}
    hostRewrite: {{ $hostRewrite }}  # Configurable hostRewrite if provided
{{- end }}
{{- if and (not (empty $extAuthName)) (not (empty $extAuthNamespace)) }}
    extauth:
      configRef:
        name: {{ $extAuthName }}
        namespace: {{ $extAuthNamespace }}  # Only render extauth if both values are provided
{{- end }}
